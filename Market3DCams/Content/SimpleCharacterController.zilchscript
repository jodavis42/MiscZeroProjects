////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright 2017 DigiPen USA Corporation, All Rights Reserved
// Author: Zero Engine Team
// Last updated by: Arend Danielek
// Last update: 1/3/2017
////////////////////////////////////////////////////////////////////////////////////////////////////////////

class SimpleCharacterController : ZilchComponent
{
  [Dependency] var Orientation : Orientation;
  [Dependency] var SweptController : SweptController;

  // Number of degrees per second the character will rotate.
  [Property] var OrientSpeed : Real = 80.0;
  
  // Input
  [Property] var ForwardKey : Keys = Keys.W;
  [Property] var BackwardKey : Keys = Keys.S;
  [Property] var LeftKey : Keys = Keys.A;
  [Property] var RightKey : Keys = Keys.D;
  [Property] var JumpKey : Keys = Keys.Space;

  // Direction the player should be facing when finished rotating
  var OrientDir : Real3 = Real3();

  function Initialize(init : CogInitializer)
  {
    Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
  }

  function OnLogicUpdate(event : UpdateEvent)
  {
    var localMoveDir = Real3();
    if(Zero.Keyboard.KeyIsDown(this.ForwardKey))
      localMoveDir.Y += 1;
    else if(Zero.Keyboard.KeyIsDown(this.BackwardKey))
      localMoveDir.Y += -1;
    if(Zero.Keyboard.KeyIsDown(this.LeftKey))
      localMoveDir.X += 1;
    else if(Zero.Keyboard.KeyIsDown(this.RightKey))
      localMoveDir.X += -1;
    
    // Update the rotation based upon a target speed and the left/right keys
    var rotationDelta = Math.ToRadians(this.OrientSpeed) * localMoveDir.X * event.Dt;
    this.Owner.Transform.RotateAnglesWorld(Real3(0, rotationDelta, 0));
    
    // Move forward/backwards
    var worldMoveDir = localMoveDir.Y * this.Orientation.WorldForward;
    this.SweptController.Update(worldMoveDir, event.Dt);
    
    // Handle jumping
    if(Zero.Keyboard.KeyIsPressed(this.JumpKey))
    {
      this.SweptController.Jump();
    }
  }
}
